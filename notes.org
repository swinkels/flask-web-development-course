* Notes

* Hour registration
  :LOGBOOK:
  CLOCK: [2019-04-12 Fri 14:11]
  CLOCK: [2019-04-12 Fri 09:45]--[2019-04-12 Fri 09:48] =>  0:03
  CLOCK: [2019-04-09 Tue 20:30]--[2019-04-09 Tue 21:12] =>  0:42
  CLOCK: [2019-04-07 Sun 20:19]--[2019-04-07 Sun 21:00] =>  0:41
  CLOCK: [2019-04-07 Sun 14:40]--[2019-04-07 Sun 15:13] =>  0:33
  CLOCK: [2019-04-06 Sat 19:29]--[2019-04-06 Sat 20:57] =>  1:28
  CLOCK: [2019-04-02 Tue 21:46]--[2019-04-02 Tue 22:10] =>  0:24
  CLOCK: [2019-03-31 Sun 21:39]--[2019-03-31 Sun 22:24] =>  0:45
  CLOCK: [2019-03-31 Sun 12:18]--[2019-03-31 Sun 13:00] =>  0:42
  CLOCK: [2019-03-31 Sun 11:42]--[2019-03-31 Sun 12:07] =>  0:25
  CLOCK: [2019-03-30 Sat 20:02]--[2019-03-30 Sat 20:29] =>  0:27
  CLOCK: [2019-03-29 Fri 08:51]--[2019-03-29 Fri 08:57] =>  0:06
  CLOCK: [2019-03-29 Fri 07:54]--[2019-03-29 Fri 08:34] =>  0:40
  CLOCK: [2019-03-28 Thu 20:28]--[2019-03-28 Thu 20:46] =>  0:18
  CLOCK: [2019-03-28 Thu 20:01]--[2019-03-28 Thu 20:26] =>  0:25
  CLOCK: [2019-03-27 Wed 20:26]--[2019-03-27 Wed 20:55] =>  0:29
  CLOCK: [2019-03-24 Sun 10:41]--[2019-03-24 Sun 11:01] =>  0:20
  CLOCK: [2019-03-23 Sat 20:08]--[2019-03-23 Sat 20:37] =>  0:29
  CLOCK: [2019-03-23 Sat 12:49]--[2019-03-23 Sat 13:02] =>  0:13
  CLOCK: [2019-03-23 Sat 12:12]--[2019-03-23 Sat 12:24] =>  0:12
  CLOCK: [2019-03-23 Sat 11:58]--[2019-03-23 Sat 12:11] =>  0:13
  CLOCK: [2019-03-21 Thu 20:25]--[2019-03-21 Thu 21:17] =>  0:52
  CLOCK: [2019-03-20 Wed 20:41]--[2019-03-20 Wed 21:13] =>  0:32
  CLOCK: [2019-03-19 Tue 21:05]--[2019-03-19 Tue 21:44] =>  0:39
  CLOCK: [2019-03-17 Sun 20:00]--[2019-03-17 Sun 21:09] =>  1:09
  :END:

#+BEGIN: clocktable :scope file :block week
#+CAPTION: Clock summary at [2019-04-12 Fri 14:47], for week 2019-W15.
| Headline          | Time   |
|-------------------+--------|
| *Total time*      | *1:21* |
|-------------------+--------|
| Hour registration | 1:21   |
#+END:

** [2019-04-12 Fri]

- Ch. 11: Facelift
- Ch. 11.1: CSS Frameworks
- Ch. 12.2: Introducing Bootstrap
- Ch. 12.3: Using Flask-Bootstrap
  - install silversearcher-ag to quickly search & replace from Spacemacs
- Ch. 11.4: Rendering Bootstrap Forms
- Ch. 11.5: Rendering of Blog Posts
- Ch. 11.6: Rendering Pagination Links
- Ch. 11.7: Before and After


** [2019-04-09 Tue]

- Ch. 10.6: Sending a Password Reset Email
- Ch. 10.7: Resetting a User Password
- Ch. 10.8: Asynchronous Emails

** [2019-04-07 Sun]

- Ch. 9.4: Pagination of Blog Posts
- Ch. 9.5: Page Navigation
- Ch. 9.6: Pagination in the User Profile Page
- Ch. 10: Email Support
- Ch. 10.1: Introduction to Flask-Mail
- Ch. 10.2: Flask-Mail Usage
- Ch. 10.3: A Simple Email Framework
- Ch. 10.4: Requesting a Password Reset
- Ch. 10.5: Password Reset Tokens

** [2019-04-06 Sat]

- Ch. 8.7: Unit Testing the User Model
  - only typed the first test
- Ch. 8.8: Integrating followers with the Application
- Ch. 9: Pagination
- Ch. 9.1: Submission of Blog Posts
- Ch. 9.2: Displaying Blog Posts
- Ch. 9.3: Making It Easier to Find Users to Follow


** [2019-04-02 Tue]

- Ch. 8.5: Obtaining the Posts from Followed Users
- Ch. 8.6: Combining own and Followed Posts

** [2019-03-31 Sun]

- Ch. 7.4: Sending Errors by Email
- Ch. 7.5: Logging to a File
- Ch. 7.6: Fixing the Duplicate Username Bug
  - pushed the Git repo with the code to new GitHub repo swinkels/flask-web-development-course
- Ch. 8: Followers
- Ch. 8.1: Database Relationships Revisited
- Ch. 8.2: Representing Followers
- Ch. 8.3: Database Model Representation
- Ch. 8.4: Adding and Removing "follows"
  - re-read explanation on assocation table (from 8.2 on)

** [2019-03-30 Sat]

- Ch. 7: Error Handling
- Ch. 7.1: Error Handling in Flask
- Ch. 7.2: Debug Mode
- Ch. 7.3: Custom Error Pages

** [2019-03-29 Fri]

- Ch. 6.2: Avatars
- Ch. 6.3: Using Jinja2 Sub-Templates
- Ch. 6.4: More Interesting Profiles
- Ch. 6.5: Recording The Last Visit Time For a User
- Ch. 6.6: Profile Editor

** [2019-03-28 Thu]

- Ch. 5.9: User Registration
- Ch. 6: Profile Page and Avatars
- Ch. 6.1: User Profile Page

** [2019-03-27 Wed]

- Ch. 5.4: User Loader Function
- Ch. 5.5: Logging Users In
- Ch. 5.6: Logging Users Out
- Ch. 5.7: Requiring Users To Login
- Ch. 5.8: Showing the Logged In User in Templates

** [2019-03-24 Sun]

- Ch. 5: User Logins
- Ch. 5.1: Password Hashing
- Ch. 5.2: Introduction to Flask-Login
- Ch. 5.3: Preparing the User Model for Flask-Login

** [2019-03-23 Sat]

- Ch. 3.8: Generating Links
- Ch. 4: Database
- Ch. 4.1: Databases in Flask
- Ch. 4.2: Database Migrations
- Ch. 4.3: Flask-SQLAlchemy Configuration
- Ch. 4.4: Database Models
- Ch. 4.5: Creating the Migration Repository
- Ch. 4.6: The First Database Migration
- Ch. 4.7: Database Upgrade and Downgrade Workflow
- Ch. 4.8: Database relationships
- Ch. 4.9: Play Time

** [2019-03-21 Thu]

- Ch. 3.4: Form Templates
- Ch. 3.5: Form Views
- Ch. 3.6: Receiving Form Data
- Ch. 3.7: Improving Field Validation

** [2019-03-20 Wed]

- Ch. 2.2: Conditional Statements
- Ch. 2.3: Loops
- Ch. 2.4: Template Inheritance
- Ch. 3: Web Forms
- Ch. 3.1: Introduction to Flask-WTF
- Ch. 3.2: Configuration
- Ch. 3.3: User Login Form

** [2019-03-19 Tue]

- Ch. 1.4: A 'Hello, World' Flask application
Chapter 2: Templates
- Ch. 2.1: What are Templates?
  - I did notice that the Spacemacs HTML layer offers HTML completion after the
    tag close symbol '<'. If I am not mistaken this is due to https://github.com/syl20bnr/spacemacs/issues/8222#issuecomment-320277662

** [2019-03-17 Sun]

- Preface
Chapter 1: Hello, World!
- Ch. 1.1: Introduction
  - install pepperflash to be able to play flash video
  - add sound device to (K)VM to be able to hear sound
  - use PulseAudio Volume Control to redirect virt-manager playback to Bluetooth headset
- Ch. 1.2: Installing Python
- Ch. 1.3: Installing Flask
